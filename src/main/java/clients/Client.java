package clients;

import services.IdGenerator;

public class Client {
    private String firstName;
    private String lastName;
    private String pesel;
    // TODO - change to long to extend range
    private int id;

    /**
     * Getter
     *
     * @return firstName client's firt name
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Setter
     *
     * @param firstName client's first name
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Getter
     *
     * @return lastName client's last name
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Setter
     *
     * @param lastName client's last name
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Getter
     *
     * @return id
     */
    public int getId() {
        return id;
    }

    /**
     * Setter
     *
     * @param id client's id
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter
     * @return client's pesel
     */
    public String getPesel() {
        return pesel;
    }

    /**
     * Setter
     * @param pesel client's pesel
     */
    public void setPesel(String pesel) {
        this.pesel = pesel;
    }

    /**
     * Client constructor
     * <p>
     * Setting firstName and lastName, id is generated by increasing static int attribute.
     *
     * @param firstName
     * @param lastName
     */
    public Client(String firstName, String lastName, String pesel) {
        this.id = IdGenerator.generateClientId();
        this.firstName = firstName;
        this.lastName = lastName;
        //TODO - liczba znak√≥w pesel
        this.pesel = pesel;
    }

    /**
     * Method to compare one object with another
     *
     * @param object object to compare
     * @return
     */
    @Override
    public boolean equals(Object object) {
        if (this == object)
            return true;
        if (object == null || getClass() != object.getClass())
            return false;

        Client client = (Client) object;

        if (id != client.id)
            return false;
        if (firstName != null ? !firstName.equals(client.firstName) : client.firstName != null)
            return false;
        if (lastName != null ? !lastName.equals(client.lastName) : client.lastName != null)
            return false;
        return pesel != null ? pesel.equals(client.pesel) : client.pesel == null;
    }

    /**
     * Unique code of the object based on its attributes
     *
     * @return
     */
    @Override
    public int hashCode() {
        int result = firstName != null ? firstName.hashCode() : 0;
        result = 31 * result + (lastName != null ? lastName.hashCode() : 0);
        result = 31 * result + (pesel != null ? pesel.hashCode() : 0);
        result = 31 * result + id;
        return result;
    }
}
